package com.concept.crew.dao.loaderUtil;

import $classImport;
import com.univocity.parsers.common.processor.BeanListProcessor;
import com.univocity.parsers.csv.CsvParser;
import com.univocity.parsers.csv.CsvParserSettings;
import org.apache.log4j.Logger;
import java.util.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;



public class DelimiterDataExtractor{


	public static List<$classType> parseFileData(Boolean haveHeaderInFile,String delimiter, Class<$classType> className,String xsdName) throws Exception 
	{
		if(xsdName == null )
		{
			throw new Exception("File name is mandatory for reading file");
		}
		
		List<$classType> beans = null;
		// BeanListProcessor converts each parsed row to an instance of a given class, then stores each instance into a list.
		BeanListProcessor<$classType> processor = new BeanListProcessor<$classType>(className);
		
		CsvParserSettings settings = newCsvInputSettings(null,delimiter);
		
		settings.setRowProcessor(processor);
		settings.setHeaderExtractionEnabled(haveHeaderInFile);
		settings.setIgnoreLeadingWhitespaces(true);
		settings.setIgnoreTrailingWhitespaces(true);

		CsvParser parser = new CsvParser(settings);
		 	
		try 
		{
			parser.parse(newReader(xsdName));
		} 
		catch (Exception e) 
		{
			System.err.println("Parse Error: " + e.getMessage()); 
			throw e;
		}	
      
		// The BeanListProcessor provides a list of objects extracted from the input.
		beans = processor.getBeans();

		return beans;
	}
	
	protected static CsvParserSettings newCsvInputSettings(char[] lineSeparator,String delimiter) 
	{
		CsvParserSettings out = new CsvParserSettings();
		if (lineSeparator == null) 
		{
			out.setLineSeparatorDetectionEnabled(true);
		} 
		else 
		{
			out.getFormat().setLineSeparator(lineSeparator);
		}
		
		//out.getFormat().setDelimiter(delimiter.charAt(0));
		char separator;
		if ("\\t".equals(delimiter)) 
		{
			separator = '\t';
		}else if("\\|".equals(delimiter))
		{
			separator = '|';
		}
		else 
		{
			separator = delimiter.charAt(0);
		}
		out.getFormat().setDelimiter(separator);
		
		return out;
	}
	
	
		public static Reader newReader(String filename) throws Exception 
	{
		BufferedReader reader = new BufferedReader( new FileReader(filename) ); 
		return reader;
	}	
	
}